(function(){var e={258:function(){},840:function(){},363:function(){},731:function(){let{Application:e}=Shopware;e.addServiceProviderDecorator("searchTypeService",e=>(e.upsertType("nuonic_available_opensource_plugin",{entityName:"nuonic_available_opensource_plugin",placeholderSnippet:"nuonic-plugin-installer.extension.listing.placeholderSearchBar",listingRoute:"nuonic.plugin.installer.list",hideOnGlobalSearchBar:!1}),e))},419:function(e,n,i){var t=i(258);t.__esModule&&(t=t.default),"string"==typeof t&&(t=[[e.id,t,""]]),t.locals&&(e.exports=t.locals),i(346).Z("0397f4d7",t,!0,{})},384:function(e,n,i){var t=i(840);t.__esModule&&(t=t.default),"string"==typeof t&&(t=[[e.id,t,""]]),t.locals&&(e.exports=t.locals),i(346).Z("72608b7c",t,!0,{})},841:function(e,n,i){var t=i(363);t.__esModule&&(t=t.default),"string"==typeof t&&(t=[[e.id,t,""]]),t.locals&&(e.exports=t.locals),i(346).Z("3f9cb10d",t,!0,{})},346:function(e,n,i){"use strict";function t(e,n){for(var i=[],t={},l=0;l<n.length;l++){var a=n[l],r=a[0],s={id:e+":"+l,css:a[1],media:a[2],sourceMap:a[3]};t[r]?t[r].parts.push(s):i.push(t[r]={id:r,parts:[s]})}return i}i.d(n,{Z:function(){return h}});var l="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!l)throw Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var a={},r=l&&(document.head||document.getElementsByTagName("head")[0]),s=null,o=0,c=!1,u=function(){},p=null,d="data-vue-ssr-id",g="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function h(e,n,i,l){c=i,p=l||{};var r=t(e,n);return m(r),function(n){for(var i=[],l=0;l<r.length;l++){var s=a[r[l].id];s.refs--,i.push(s)}n?m(r=t(e,n)):r=[];for(var l=0;l<i.length;l++){var s=i[l];if(0===s.refs){for(var o=0;o<s.parts.length;o++)s.parts[o]();delete a[s.id]}}}}function m(e){for(var n=0;n<e.length;n++){var i=e[n],t=a[i.id];if(t){t.refs++;for(var l=0;l<t.parts.length;l++)t.parts[l](i.parts[l]);for(;l<i.parts.length;l++)t.parts.push(b(i.parts[l]));t.parts.length>i.parts.length&&(t.parts.length=i.parts.length)}else{for(var r=[],l=0;l<i.parts.length;l++)r.push(b(i.parts[l]));a[i.id]={id:i.id,refs:1,parts:r}}}}function f(){var e=document.createElement("style");return e.type="text/css",r.appendChild(e),e}function b(e){var n,i,t=document.querySelector("style["+d+'~="'+e.id+'"]');if(t){if(c)return u;t.parentNode.removeChild(t)}if(g){var l=o++;n=_.bind(null,t=s||(s=f()),l,!1),i=_.bind(null,t,l,!0)}else n=y.bind(null,t=f()),i=function(){t.parentNode.removeChild(t)};return n(e),function(t){t?(t.css!==e.css||t.media!==e.media||t.sourceMap!==e.sourceMap)&&n(e=t):i()}}var v=function(){var e=[];return function(n,i){return e[n]=i,e.filter(Boolean).join("\n")}}();function _(e,n,i,t){var l=i?"":t.css;if(e.styleSheet)e.styleSheet.cssText=v(n,l);else{var a=document.createTextNode(l),r=e.childNodes;r[n]&&e.removeChild(r[n]),r.length?e.insertBefore(a,r[n]):e.appendChild(a)}}function y(e,n){var i=n.css,t=n.media,l=n.sourceMap;if(t&&e.setAttribute("media",t),p.ssrId&&e.setAttribute(d,n.id),l&&(i+="\n/*# sourceURL="+l.sources[0]+" */\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(l))))+" */"),e.styleSheet)e.styleSheet.cssText=i;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(i))}}}},n={};function i(t){var l=n[t];if(void 0!==l)return l.exports;var a=n[t]={id:t,exports:{}};return e[t](a,a.exports,i),a.exports}i.d=function(e,n){for(var t in n)i.o(n,t)&&!i.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},i.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},i.p="bundles/nuonicplugininstaller/",window?.__sw__?.assetPath&&(i.p=window.__sw__.assetPath+"/bundles/nuonicplugininstaller/"),function(){"use strict";i(841);let{Component:e,Mixin:n}=Shopware,{Criteria:t}=Shopware.Data;e.register("nuonic-plugin-installer-list",{template:'{% block nuonic_plugin_installer_index %}\n    <sw-page hide-icon>\n        <template #search-bar>\n            <sw-search-bar initial-search-type="nuonic_available_opensource_plugin" :placeholder="$tc(\'nuonic-plugin-installer.extension.listing.placeholderSearchBar\')" @search="onSearch" />\n        </template>\n\n        <template #smart-bar-header>\n            <h2>\n                {{ $tc(\'nuonic-plugin-installer.list.title\') }} ({{ availablePlugins.total }})\n            </h2>\n        </template>\n\n        <template #language-switch>\n            <sw-language-switch @on-change="onChangeLanguage" />\n        </template>\n\n        <template #content>\n            <div class="nuonic-plugin-installer-index">\n                <sw-skeleton v-if="isLoading" :variant="skeletonVariant" />\n                <sw-card\n                        v-else-if="!isLoading && availablePlugins.total === 0"\n                        class="nuonic-plugin-installer-index__no-results"\n                >\n                     <sw-empty-state\n                         :title="$tc(\'nuonic-plugin-installer.list.emptyState.title\')"\n                         :subline="$tc(\'nuonic-plugin-installer.list.emptyState.subline\')"\n                         :icon="\'regular-exclamation-triangle\'"\n                         :absolute="false"\n                         color="#ff8f00"\n                         class="nuonic-plugin-installer-index__empty-state"\n                     />\n                </sw-card>\n                <div v-else class="nuonic-plugin-installer-index__listing-grid">\n                    <template v-if="total > 0">\n                        <template v-for="entry in availablePlugins" :key="entry.id">\n                            <component :is="\'nuonic-extension-card\'" :extension="entry" />\n                        </template>\n                        <sw-pagination :total="total" :limit="limit" :page="page" @page-change="changePage" />\n                    </template>\n                    <template v-else>\n\n                    </template>\n                </div>\n            </div>\n        </template>\n\n        <template #sidebar>\n            <sw-sidebar class="sw-customer-list__sidebar">\n                    <sw-sidebar-item\n                            icon="regular-undo"\n                            :title="$tc(\'nuonic-plugin-installer.list.titleSidebarItemRefresh\')"\n                            @click="onRefresh"\n                    />\n\n                    <sw-sidebar-filter-panel\n                            entity="nuonic_available_opensource_plugin"\n                            :store-key="storeKey"\n                            :filters="listFilters"\n                            :defaults="defaultFilters"\n                            :active-filter-number="activeFilterNumber"\n                            @criteria-changed="updateCriteria"\n                    />\n            </sw-sidebar>\n        </template>\n    </sw-page>\n{% endblock %}\n',inject:["repositoryFactory","filterFactory"],mixins:[n.getByName("listing")],data(){return{availablePlugins:[],page:1,limit:25,total:0,term:null,sortBy:"packagistDownloads",sortDirection:"DESC",isLoading:!1,filterCriteria:[],activeFilterNumber:0,defaultFilters:["name-filter","description-filter","manufacturer-filter","license-filter","last-commit-filter"],storeKey:"grid.filter.nuonic_available_opensource_plugin"}},computed:{availablePluginsRepository(){return this.repositoryFactory.create("nuonic_available_opensource_plugin")},availablePluginsCriteria(){let e=new t(this.page,this.limit);return e.setTerm(this.term),e.addSorting(t.sort(this.sortBy,this.sortDirection)),e.addAssociation("plugin"),e.addFilter(t.range("lastSeenAt",{gte:new Date(Date.now()-1728e5)})),this.filterCriteria.forEach(n=>{e.addFilter(n)}),e},listFilterOptions(){return{"name-filter":{property:"name",type:"string-filter",label:this.$tc("nuonic-plugin-installer.list.filters.nameFilter.label"),placeholder:this.$tc("nuonic-plugin-installer.list.filters.nameFilter.placeholder"),valueProperty:"key",labelProperty:"key",criteriaFilterType:"contains"},"description-filter":{property:"description",type:"string-filter",label:this.$tc("nuonic-plugin-installer.list.filters.descriptionFilter.label"),placeholder:this.$tc("nuonic-plugin-installer.list.filters.descriptionFilter.placeholder"),valueProperty:"key",labelProperty:"key",criteriaFilterType:"contains"},"manufacturer-filter":{property:"manufacturer",type:"string-filter",label:this.$tc("nuonic-plugin-installer.list.filters.manufacturerFilter.label"),placeholder:this.$tc("nuonic-plugin-installer.list.filters.manufacturerFilter.placeholder"),valueProperty:"key",labelProperty:"key",criteriaFilterType:"contains"},"license-filter":{property:"license",label:this.$tc("nuonic-plugin-installer.list.filters.licenseFilter.label"),placeholder:this.$tc("nuonic-plugin-installer.list.filters.licenseFilter.placeholder"),type:"multi-select-filter",options:[{label:"MIT",value:"MIT"},{label:"OSL-3.0",value:"OSL-3.0"},{label:"Apache-2.0",value:"Apache-2.0"},{label:"GPL-3.0",value:"GPL-3.0"},{label:"GPL-3.0-or-later",value:"GPL-3.0-or-later"}]},"last-commit-filter":{property:"lastCommitTime",label:this.$tc("nuonic-plugin-installer.list.filters.lastCommitFilter.label"),dateType:"date",fromFieldLabel:null,toFieldLabel:null,showTimeframe:!0}}},listFilters(){return this.filterFactory.create("nuonic_available_opensource_plugin",this.listFilterOptions)},assetFilter(){return Shopware.Filter.getByName("asset")}},methods:{async getList(){this.isLoading=!0;let e=await Shopware.Service("filterService").mergeWithStoredFilters(this.storeKey,this.availablePluginsCriteria);this.activeFilterNumber=e.filters.length-1;try{let n=await this.availablePluginsRepository.search(e);this.availablePlugins=n,this.total=n.total,this.isLoading=!1}catch{this.isLoading=!1}},onChangeLanguage(){this.getList()},changePage({page:e=1,limit:n=10}){this.page=e,this.limit=n,this.getList()},onSearch(e){this.term=e,this.getList()},updateCriteria(e){return this.page=1,this.filterCriteria=e,this.getList()}}}),Shopware.Module.register("nuonic-plugin-installer",{type:"plugin",name:"nuonic-plugin-installer.extension.title",title:"nuonic-plugin-installer.extension.title",entity:"nuonic_available_opensource_plugin",description:"nuonic-plugin-installer.extension.description",color:"#66bbe3",icon:"regular-dashboard",navigation:[{label:"nuonic-plugin-installer.extension.title",color:"#66bbe3",path:"nuonic.plugin.installer.list",icon:"regular-dashboard",parent:"sw-extension",position:100}],routes:{list:{component:"nuonic-plugin-installer-list",path:"list"}},defaultSearchConfiguration:{_searchable:!0,name:{_searchable:!0,_score:700}}}),i(384);let{Component:l}=Shopware,{Criteria:a}=Shopware.Data;l.register("nuonic-plugin-installer-index",{template:'{% block nuonic_plugin_installer_index %}\n<div class="nuonic-plugin-installer-index">\n\n</div>\n{% endblock %}\n',inject:["repositoryFactory"],computed:{async packages(){let e=this.repositoryFactory.create("nuonic_available_opensource_plugin");return await e.search(new a)}}});let{Component:r}=Shopware;r.override("sw-search-bar-item",{template:'{% block sw_search_bar_item_cms_page %}\n    {% parent %}\n\n    {% block nuonic_plugin_installer_search_bar_item_opensource_plugin %}\n        <router-link\n            v-else-if="type === \'nuonic_available_opensource_plugin\'"\n            :to="{ name: \'nuonic.plugin.installer.list\', query: { term: item.packageName } }"\n            ref="routerLink"\n            class="sw-search-bar-item__link">\n            {% block nuonic_plugin_installer_search_bar_item_opensource_plugin_label %}\n                <span class="sw-search-bar-item__label">\n                    <sw-highlight-text\n                        :searchTerm="searchTerm"\n                        :text="item.name"\n                    />\n                </span>\n            {% endblock %}\n        </router-link>\n    {% endblock %}\n{% endblock %}\n'}),i(731),i(419);let s=/^[v^~<>=]*?(\d+)(?:\.([x*]|\d+)(?:\.([x*]|\d+)(?:\.([x*]|\d+))?(?:-([\da-z\-]+(?:\.[\da-z\-]+)*))?(?:\+[\da-z\-]+(?:\.[\da-z\-]+)*)?)?)?$/i,o=e=>{if("string"!=typeof e)throw TypeError("Invalid argument expected string");let n=e.match(s);if(!n)throw Error(`Invalid argument not valid semver ('${e}' received)`);return n.shift(),n},c=e=>"*"===e||"x"===e||"X"===e,u=e=>{let n=parseInt(e,10);return isNaN(n)?e:n},p=(e,n)=>typeof e!=typeof n?[String(e),String(n)]:[e,n],d=(e,n)=>{if(c(e)||c(n))return 0;let[i,t]=p(u(e),u(n));return i>t?1:i<t?-1:0},g=(e,n)=>{for(let i=0;i<Math.max(e.length,n.length);i++){let t=d(e[i]||"0",n[i]||"0");if(0!==t)return t}return 0},h=(e,n)=>{let i=o(e),t=o(n),l=i.pop(),a=t.pop(),r=g(i,t);return 0!==r?r:l&&a?g(l.split("."),a.split(".")):l||a?l?-1:1:0},{Component:m,Mixin:f,Filter:b}=Shopware;m.register("nuonic-extension-card",{template:'<sw-meteor-card	class="nuonic-extension-card-base">\n	<sw-loader	v-if="isLoading" />\n\n	<sw-extension-icon	:src="imageUrl" />\n\n	<div	class="nuonic-extension-card-base__info">\n		<section>\n			<span	class="nuonic-extension-card-base__info-name">\n				{{ extension.name }}\n			</span>\n			<br/>\n			<span	class="nuonic-extension-card-base__info-description">\n				{{ extension.description }}\n			</span>\n			<br/>\n			<span	v-if="extension.manufacturer"	class="nuonic-extension-card-base__info-manufacturer">\n				{{ $tc(\'nuonic-plugin-installer.cards.manufacturer\') }}\n				{{ extension.manufacturer }}\n			</span>\n			|\n			<span	v-if="extension.license"	class="nuonic-extension-card-base__info-license">\n				{{ $tc(\'nuonic-plugin-installer.cards.license\') }}\n				{{ extension.license }}\n			</span>\n		</section>\n	</div>\n\n	<div	class="nuonic-extension-card-base__main-link">\n		<a	:href="extension.link"	target="_blank"	rel="noopener noreferrer">\n			<sw-icon	name="regular-github"></sw-icon>\n		</a>\n	</div>\n\n	<div	class="nuonic-extension-card-base__meta-info">\n		<section>\n			<span	v-if="extension.availableVersion"	class="nuonic-extension-card-base__meta-info-version">\n				{{ $tc(\'nuonic-plugin-installer.cards.version\') }}\n				{{ extension.availableVersion }}\n			</span>\n			<br />\n			<a :href="\'https://packagist.org/packages/\' + extension.packageName + \'/stats\'" target="_blank" class="nuonic-extension-card-base__meta-info-downloads">\n				{{ $tc(\'nuonic-plugin-installer.cards.downloads\') }} {{ extension.packagistDownloads }}\n			</a>\n			<br/>\n			<span	v-if="extension.lastCommitTime"	class="nuonic-extension-card-base__meta-info-last-commit">\n				{{ $tc(\'nuonic-plugin-installer.cards.lastCommit\') }}\n				{{ dateFilter(extension.lastCommitTime, { month: \'numeric\', year: \'numeric\', hour: undefined, minute: undefined }) }}\n			</span>\n			<span	v-if="isInstalled"	class="nuonic-extension-card-base__meta-info-last-commit">\n				{{ $tc(\'nuonic-plugin-installer.cards.installedAt\') }}\n				{{ dateFilter(extension.plugin.installedAt, { month: \'numeric\', year: \'numeric\', hour: undefined, minute: undefined }) }}\n			</span>\n		</section>\n\n	</div>\n\n	<div	class="nuonic-extension-card-base__main-action">\n		<span	v-if="!isInstalled"	class="nuonic-extension-card-base__open-extension"	role="button"	tabindex="0"	@click="onInstall">\n			{{ $tc(\'nuonic-plugin-installer.cards.install\') }}\n		</span>\n		<span	v-if="isUpdateAvailable"	class="nuonic-extension-card-base__open-extension"	role="button"	tabindex="0"	@click="onUpdate">\n			{{ $tc(\'nuonic-plugin-installer.cards.update\') }}\n		</span>\n		<span	v-if="isInstalled && !isUpdateAvailable"	class="nuonic-extension-card-base__open-extension as-info">\n\n			<sw-icon	name="regular-check-circle"	color="#22bb33"></sw-icon>\n		</span>\n	</div>\n\n</sw-meteor-card>\n',inject:["installExtensionService"],mixins:[f.getByName("notification")],emits:["update-list"],props:{extension:{type:Object,required:!0}},data(){return{isLoading:!1}},computed:{dateFilter(){return Shopware.Filter.getByName("date")},defaultThemeAsset(){return this.assetFilter("administration/static/img/theme/default_theme_preview.jpg")},imageUrl(){let e=window.location.origin;if(!this.extension.icon)return this.defaultThemeAsset;let n=new URLSearchParams({url:this.extension.icon});return`${e}/api/_action/nuonic-plugin-installer/proxy?${n}`},isInstalled(){return null!==this.extension.pluginId},isUpdateAvailable(){return!!this.isInstalled&&h(this.extension.availableVersion,this.extension.plugin.version)},assetFilter(){return b.getByName("asset")}},methods:{onInstall(){this.isLoading=!0;let e={openSourcePluginId:this.extension.id};this.installExtensionService.install(e).then(()=>{this.isLoading=!1,this.$router.push({name:"sw.extension.my-extensions.listing.app",query:{term:this.extension.name}})}).catch(e=>{this.isLoading=!1,this.createNotificationError({message:this.$tc("nuonic-plugin-installer.notification.installFailed"),error:e})})},onUpdate(){this.onInstall()}}});let v=Shopware.Classes.ApiService,{Application:_}=Shopware;class y extends v{constructor(e,n,i="nuonic-plugin-installer"){super(e,n,i)}install(e){let n=this.getBasicHeaders({});return this.httpClient.post("_action/nuonic-plugin-installer/install",e,{headers:n}).then(e=>v.handleResponse(e))}}_.addServiceProvider("installExtensionService",e=>new y(_.getContainer("init").httpClient,e.loginService));var x=JSON.parse('{"global":{"entities":{"nuonic_available_opensource_plugin":"OpenSource Plugins"}},"nuonic-plugin-installer":{"extension":{"title":"OpenSource Plugin Installer","titleSidebarItemRefresh":"Aktualisieren","description":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas vel diam mi. Quisque consectetur condimentum blandit. Integer nunc nisi, porttitor sed nunc bibendum, vestibulum.","listing":{"placeholderSearchBar":"Suche nach Plugins..."}},"list":{"title":"OpenSource Plugin Installer","filters":{"nameFilter":{"label":"Name","placeholder":"Suche nach Namen..."},"descriptionFilter":{"label":"Beschreibung","placeholder":"Suche nach Beschreibung..."},"manufacturerFilter":{"label":"Hersteller","placeholder":"Suche nach Hersteller..."},"licenseFilter":{"label":"Lizenz","placeholder":"W\xe4hle Lizenz..."},"lastCommitFilter":{"label":"Letztes Commit"},"noResults":{"title":"Kleine Plugins gefunden","description":"Versuche deine Suche oder Filterkriterien zu \xe4ndern."}},"emptyState":{"title":"Keine Plugins gefunden","subline":"\xdcberpr\xfcfe, ob die geplanten Aufgaben korrekt ausgef\xfchrt werden und dass eine korrekte Plugin-Liste in der Plugin-Konfiguration eingestellt ist."}},"cards":{"version":"Version:","install":"Installieren","lastCommit":"Letzter Commit am:","installedAt":"Installiert am:","license":"Lizenz:","manufacturer":"Hersteller:","update":"Aktualisieren","downloads":"Downloads:"},"notification":{"installFailed":"Installation fehlgeschlagen"}},"ce_plugins":{"moduleTitle":"OpenSource Plugins"},"sw-profile":{"tabSearchPreferences":{"modules":{"nuonic_available_opensource_plugin":{"name":"OpenSource Plugin"}}}}}'),w=JSON.parse('{"global":{"entities":{"nuonic_available_opensource_plugin":"OpenSource Plugins"}},"nuonic-plugin-installer":{"extension":{"title":"OpenSource Plugin Installer","description":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas vel diam mi. Quisque consectetur condimentum blandit. Integer nunc nisi, porttitor sed nunc bibendum, vestibulum.","listing":{"placeholderSearchBar":"Search for plugins..."}},"list":{"title":"OpenSource Plugin Installer","titleSidebarItemRefresh":"Refresh","filters":{"nameFilter":{"label":"Name","placeholder":"Search for name..."},"descriptionFilter":{"label":"Description","placeholder":"Search for description..."},"manufacturerFilter":{"label":"Manufacturer","placeholder":"Search for manufacturer..."},"licenseFilter":{"label":"License","placeholder":"Select license..."},"lastCommitFilter":{"label":"Last commit"},"noResults":{"title":"No plugins found","description":"Try changing your search or filter criteria."},"emptyState":{"title":"No plugins found","subline":"Try changing your search or filter criteria. Otherwise, check that the scheduled tasks are executed correctly and that a correct plugin list is set in the plugin configuration."}}},"cards":{"version":"Version:","install":"Install","lastCommit":"Last commit on:","installedAt":"Installed on:","license":"License:","manufacturer":"Manufacturer:","update":"Update","downloads":"Downloads:"},"notification":{"installFailed":"Installation failed"}},"ce_plugins":{"moduleTitle":"OpenSource Plugins"},"sw-profile":{"tabSearchPreferences":{"modules":{"nuonic_available_opensource_plugin":{"name":"OpenSource Plugin"}}}}}');Shopware.Locale.extend("de-DE",x),Shopware.Locale.extend("en-GB",w)}()})();